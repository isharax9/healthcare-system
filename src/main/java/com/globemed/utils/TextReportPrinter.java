package com.globemed.utils;

import com.itextpdf.text.Chunk;
import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.Element;
import com.itextpdf.text.Font;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.pdf.PdfWriter;

import java.io.File; // <-- NEW IMPORT
import java.io.FileOutputStream;
import java.io.IOException;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;

public class TextReportPrinter {

    private static final Font FONT_TITLE = new Font(Font.FontFamily.HELVETICA, 18, Font.BOLD);
    private static final Font FONT_HEADER_BOLD = new Font(Font.FontFamily.HELVETICA, 12, Font.BOLD);
    private static final Font FONT_NORMAL = new Font(Font.FontFamily.COURIER, 10, Font.NORMAL);
    private static final Font FONT_FOOTER = new Font(Font.FontFamily.HELVETICA, 8, Font.ITALIC);

    /**
     * Generates a PDF from a given text report.
     * @param reportTitle The title for the report in the PDF.
     * @param reportContent The actual text content of the report.
     * @param patientId The patient ID associated with the report (for filename).
     * @return The absolute path of the generated PDF, or null if an error occurred.
     */
    public static String printTextReport(String reportTitle, String reportContent, String patientId) {
        String folderName;
        // Determine the folder based on the report title
        if ("Patient Summary Report".equals(reportTitle)) {
            folderName = "PatientSummaryReports";
        } else if ("Financial Report".equals(reportTitle)) {
            folderName = "FinancialReports";
        } else {
            folderName = "GeneralReports"; // Fallback
        }

        // --- NEW: Create a folder if it doesn't exist ---
        File folder = new File(folderName);
        if (!folder.exists()) {
            if (!folder.mkdirs()) { // Use mkdirs to create parent directories if they don't exist
                System.err.println("Failed to create directory: " + folderName);
                return null; // Abort if the folder can't be created
            }
        }

        String fileNameOnly = String.format("%s-%s-%s.pdf", reportTitle.replace(" ", ""), patientId, LocalDateTime.now().format(DateTimeFormatter.ofPattern("yyyyMMdd_HHmmss")));
        String fullPath = folder.getAbsolutePath() + File.separator + fileNameOnly; // Combine folder and file name

        Document document = new Document();

        try {
            PdfWriter.getInstance(document, new FileOutputStream(fullPath)); // --- MODIFIED: Use fullPath ---
            document.open();

            // --- Header ---
            Paragraph title = new Paragraph("GlobeMed Healthcare - " + reportTitle, FONT_TITLE);
            title.setAlignment(Element.ALIGN_CENTER);
            document.add(title);
            document.add(Chunk.NEWLINE);

            // Report Details
            document.add(new Paragraph("Generated For Patient ID: " + patientId, FONT_HEADER_BOLD));
            document.add(new Paragraph("Generation Date: " + LocalDateTime.now().format(DateTimeFormatter.ofPattern("yyyy-MM-dd HH:mm:ss")), FONT_HEADER_BOLD));
            document.add(Chunk.NEWLINE);

            // --- Report Content ---
            Paragraph content = new Paragraph(reportContent, FONT_NORMAL);
            document.add(content);
            document.add(Chunk.NEWLINE);

            // --- Footer ---
            document.add(new Paragraph("Generated by GlobeMed Healthcare System", FONT_FOOTER));

            System.out.println("PDF Text Report generated: " + fullPath);
            return fullPath; // --- MODIFIED: Return full path ---

        } catch (DocumentException | IOException e) {
            System.err.println("Error generating PDF text report: " + e.getMessage());
            e.printStackTrace();
            return null;
        } finally {
            if (document.isOpen()) {
                document.close();
            }
        }
    }
}